# -*- coding: utf-8 -*-
"""Parcial_Exploracion_DP

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ziQGss-SOv_CnUfzeT6PLxZXGIjI4ulW

#***Parcial Exploracion y Procesamiento de Datos***
----
>**Author :**
* Daniela Pinzon

##***Data Salary-Survey-EU-2020***
----
>**1.**  Limpiar datos(eliminar columnas innecesarias, filas e imputar con la mediana)
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer

"""##***Pandas***
----
"""

#Limpiamos el data con pandas
df = pd.read_csv('/content/IT Salary Survey EU 2020.csv')

df

df.info()

df.dropna()

df.fillna(df.median())

"""##***Sklearn***
----
"""

df = pd.read_csv('/content/IT Salary Survey EU 2020.csv')

df

# isnull -> Verificamos los valores NaN
# any -> Valor booleano que verifica por columna ,indicando donde se encuentran los valores nan
df.isnull().any()

df.isnull().sum()

df.info()

# Limpiamos la data con sklearn
# Los datos con decimales o numeros enteros los limpiamos con la mediana o en su defecto la media
# Los datos tipo objeto o string los reemplazamos con el mas frecuente
imp_mean = SimpleImputer(strategy="mean")
imp_median = SimpleImputer(strategy="median")
imp_mode = SimpleImputer(strategy="most_frequent")

df['Age'] = imp_median.fit_transform(df[['Age']]).ravel()

imp_median.statistics_

df['Gender'] = imp_mode.fit_transform(df[['Gender']]).ravel()

imp_mode.statistics_

df['Position '] = imp_mode.fit_transform(df[['Position ']]).ravel()

imp_mode.statistics_

df['Total years of experience'] = imp_mode.fit_transform(df[['Total years of experience']]).ravel()

imp_mode.statistics_

df['Years of experience in Germany'] = imp_mode.fit_transform(df[['Years of experience in Germany']]).ravel()

imp_mode.statistics_

df['Seniority level'] = imp_mode.fit_transform(df[['Seniority level']]).ravel()

imp_mode.statistics_

df['Your main technology / programming language'] = imp_mode.fit_transform(df[['Your main technology / programming language']]).ravel()

imp_mode.statistics_

df['Other technologies/programming languages you use often'] = imp_mode.fit_transform(df[['Other technologies/programming languages you use often']]).ravel()

imp_mode.statistics_

df['Yearly bonus + stocks in EUR'] = imp_mode.fit_transform(df[['Yearly bonus + stocks in EUR']]).ravel()

imp_mode.statistics_

df['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country'] = imp_median.fit_transform(df[['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country']]).ravel()

imp_median.statistics_

df['Number of vacation days'] = imp_mode.fit_transform(df[['Number of vacation days']]).ravel()

imp_mode.statistics_

df['Employment status'] = imp_mode.fit_transform(df[['Employment status']]).ravel()

imp_mode.statistics_

df['Main language at work'] = imp_mode.fit_transform(df[['Main language at work']]).ravel()

imp_mode.statistics_

df['Сontract duration'] = imp_mode.fit_transform(df[['Сontract duration']]).ravel()

imp_mode.statistics_

df['Company size'] = imp_mode.fit_transform(df[['Company size']]).ravel()

imp_mode.statistics_

df['Company type'] = imp_mode.fit_transform(df[['Company type']]).ravel()

imp_mode.statistics_

df['Have you lost your job due to the coronavirus outbreak?'] = imp_mode.fit_transform(df[['Have you lost your job due to the coronavirus outbreak?']]).ravel()

imp_mode.statistics_

# Se eliminan estas columnas ya que faltan mas de la mitad de los datos
# A mi punto de vista pueden ser consideradas no volatiles
df = df.drop(['Annual bonus+stocks one year ago. Only answer if staying in same country', 'Have you been forced to have a shorter working week (Kurzarbeit)? If yes, how many hours per week','Have you received additional monetary support from your employer due to Work From Home? If yes, how much in 2020 in EUR'],axis=1)

df.isnull().sum()

df

"""##***Histogramas de Distribucion***
----
>**2.**  Dibujar el histograma de distribución para el salario. Indicar Media y mediana.
>- ***¿La mediana y la media son similares? ¿por qué?***

>- La media y la mediana desempeñan una función semejante para comprender la tendencia central de un conjunto de números. Debido a esto estas medidad de tendencia generalmente son similares

>- Cuando una distribución de frecuencia es simétrica, la media, mediana y moda coinciden en su valor (X = Me = Mo).
"""

Salario_Ciudad = df['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country']

Salario_Ciudad

Salario_EU = df['Yearly brutto salary (without bonus and stocks) in EUR']

Salario_EU

Media = Salario_Ciudad.mean()
Media.sum()

Media1 = Salario_EU.mean()
Media1.sum()

Mediana = Salario_Ciudad.median()
Mediana.sum()

Mediana1 = Salario_EU.median()
Mediana1.sum()

df.groupby(Salario_EU)["Age"].hist(figsize=(20,70),legend=True)

df.groupby(Salario_Ciudad)["Age"].hist(figsize=(20,70) , legend=True)

"""##***Diagramas de Cajas***
----
>**3.**  Dibujar diagrama de cajas para la distribución del salario.
>- ***¿hay datos outliers? ¿cuales?***
- Si en los diagramas de caja encontramos estos valores atipicos que afectan las medidas de tendencia del data set
- Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country    -> 500000000.0 es el outliner mas alto  y 11000.0 el mas bajo

- Yearly brutto salary (without bonus and stocks) in EUR -> 1.000000e+11 es el outliner mas alto  y 11000.0 el mas bajo 10001.0
"""

plt.figure()
df[['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country']].boxplot()
plt.ylim(0, 100000)

df[['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country']].max()

df[['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country']].min()

# Tercer cuantil
a = np.array(df[['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country']])
np.percentile(a, 75)

plt.figure()
df[['Yearly brutto salary (without bonus and stocks) in EUR']].boxplot()
plt.ylim(0, 1000000)

df[['Yearly brutto salary (without bonus and stocks) in EUR']].max()

df[['Yearly brutto salary (without bonus and stocks) in EUR']].min()

# Tercer cuantil
b = np.array(df[['Yearly brutto salary (without bonus and stocks) in EUR']])
np.percentile(a,75 )

""">**4.**  Agregar una columna que indique si alguien tiene un salario bruto mayor al tercer cuantil.

"""

mayor_EU = df['Yearly brutto salary (without bonus and stocks) in EUR'] > 72000.0
mayor_Ciudad = df['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country'] > 72000.0

df['Salario_Mayor'] = (mayor_EU)[mayor_Ciudad]

df['Salario_Mayor'].isnull().sum()

df

"""##***Tablas de Contingencia***
----
>**5.** Dibujar tabla de contingencia y determinar:
   
>* ¿Cuál es la probabilidad de tener un salario mayor al  tercer cuartil dado qué es hombre?

>* ***P(Gender = Male , Salario Mayor a 72000.0 = True)***
*  277/292 = 0.948

>* ¿Cuál es la probabilidad de tener un salario mayor al  tercer cuartil dado qué es mujer?

>* ***P(Gender = Female , Salario Mayor a 72000.0 = True)***
*  14/292 = 0.047

>* ¿Cuál es la probabilidad de  ser hombre dado que gana más del tercer cuartil?

>* ***P(Salario Mayor a 72000.0 = True , Gender = Male)***
*  14/192 = 0.072

>* ¿Cuál es la probabilidad de  ser mujer dado que gana más del tercer cuartil?

>* ***P(Salario Mayor a 72000.0 = True , Gender = Female)***
*  277/1059 = 0.261

"""

pd.crosstab( df.Salario_Mayor == True, df.Gender ,margins = True)

""">**6.** Dibujar tabla de contingencia y determinar:
   
- ¿Cuál es la probabilidad de tener un salario mayor al  tercer cuartil dado que programa en Python?

>* ***P(Your main technology / programming language= Python , Salario Mayor a 72000.0 = True)***
*  253/292 = 0.866

- ¿Cuál es la probabilidad de tener un salario mayor al  tercer cuartil dado que programa en otro lenguaje diferente de python?

>* ***P(Your main technology / programming language = !Python, Salario Mayor a 72000.0 = True)***
*  39/164 = 0.237
"""

df['Your main technology / programming language'].unique()

Python = df['Your main technology / programming language'] == ('Python' , 'Python, Pytorch' , 'AWS, GCP, Python,K8s' , 'python' ,'Go/Python','Ml/Python', 'Python + SQL','Pyrhon','Python/NLP','Python, database technologies')

pd.crosstab( df.Salario_Mayor == True,Python ,margins = True)

Otros = df['Your main technology / programming language'] != 'Python'

pd.crosstab( df.Salario_Mayor == True, Otros ,margins = True)

"""##***Diagramas de Cajas***
----
>**7.** Dibujar el diagrama de cajas de los salarios vs el género.
>* ¿Hay alguna diferencia en la distribución de los salarios recibidos por género? Justificar
- Si , evidentemente hay mas outliers en el genero masculino
- Cuando hablamos del genero diverso notamos que el salario es mucho mayor
- En el genero femenino notamos una media mucho mayor a la del genero masculino
- Tiene tendencia a ser menor el salario del genero femenino segun la grafica , aunque hay mayor porcentaje que se identifica con este genero
>* Repetir paso anterior teniendo en cuenta sólo a los programadores senior.
"""

sns.boxplot(x=df['Annual brutto salary (without bonus and stocks) one year ago. Only answer if staying in the same country'], y=df['Gender'])
plt.xlim(0, 100000)

sns.boxplot(x=df['Yearly brutto salary (without bonus and stocks) in EUR'], y=df['Gender'])
plt.xlim(0, 100000)

df['Seniority level'].unique()

senior = df['Seniority level'] == 'Senior'
df[senior]['Yearly brutto salary (without bonus and stocks) in EUR']

sns.boxplot(df[senior]['Yearly brutto salary (without bonus and stocks) in EUR'])
plt.xlim(0, 100000)

sns.boxplot(x=df['Yearly brutto salary (without bonus and stocks) in EUR'], y= df['Seniority level'])
plt.xlim(0, 100000)

"""##***Correlaciones***
----
>**8.** ¿Existe alguna correlación entre la edad y el salario? Justificar
- Segun los valores que se identifican en el mapeado de la matriz podemos definir que la correlacion entre la edad y el salario es practicamente nula
"""

# Grafica la relacion de cada una de las variales
# Histograma de relacion(1)- consigo misma sin correlacion
pd.plotting.scatter_matrix(df, figsize=(30,10))
plt.show()

# Valores de la matriz annot
sns.heatmap(df.corr(),annot=True)
# Visualizacion de ejes
plt.show()

"""#***Parte 2***
----
>* Punto libre para explorar, analizar y plantear conclusiones.


"""

df.groupby(Salario_EU)['Seniority level'].hist(figsize=(40,70),legend=True)

df.groupby(Salario_Ciudad)['Seniority level'].hist(figsize=(40,70),legend=True)

df.groupby('Age')['Seniority level'].hist(figsize=(40,70),legend=True)

df.groupby('Age')['Main language at work'].hist(figsize=(40,70),legend=True)

df.groupby('Age')['Gender'].hist(figsize=(40,70),legend=True)

df.groupby('Age')['Position '].hist(figsize=(80,40),legend=True)

sns.boxplot(x=df['Age'], y=df['Gender'])

sns.boxplot(x=df['Age'], y=df['Main language at work'])

sns.boxplot(x=df['Age'], y=df['Your main technology / programming language'])
plt.xlim(0, 100)
plt.ylim(0, 10)

pd.crosstab( df.Salario_Mayor, df.City ,margins = True)

"""#***Conclusiones***
----
>- Los datos atipicos afectan de manera directa a las medidas de tendencia
- La edad no esta correlacionada con los salarios , por lo contrario el genero y el nivel en la empresa si esta correlacionado con los salarios
- java y php son los lenguajes de programacion mas usados por personas entre los 20 y los 40 años
- Si hablamos de idiomas el ruso , aleman y español son los mas hablados dentro de la empresa la mayoria por personas entre los 20 y lso 50 años y los valores atipicos se encuentras en personas de mas de 70 generalmente
- Hay mas mujeres mayores que de otros generos en la empresa
- No hay una preferencia o tendencia marcada con la ciudad de origen de cada empleado
- El genero diverso tiene un mayor valor de ganancia en cuanto al salario anual bruto , por el contrario las bonificaciones se ven mayormente reflejadas en el genero masculino
"""